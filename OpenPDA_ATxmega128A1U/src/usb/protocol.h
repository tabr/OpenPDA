/*
 * protocol.h
 *
 * Created: 2015-02-28 22:36:05
 *  Author: tabr
 */ 


#ifndef PROTOCOL_H_
#define PROTOCOL_H_

typedef uint8_t TWI_EEPROM_Address_t;


#define USB_PAYLOAD_SIZE					128
#define USB_BUFFER_SIZE						160
#define USB_FEATURE_SIZE					4
#define USB_WRITE_BUFFERS_NUM				16
#define USB_WRITE_BUFFERS_MASK				(USB_WRITE_BUFFERS_NUM - 1)


enum PACKET_FEATURE_STRUCTURE
	{
	PACKET_FEATURE_STRUCTURE_COMMAND,
	PACKET_FEATURE_STRUCTURE_SUBCOMMAND0,
	PACKET_FEATURE_STRUCTURE_SUBCOMMAND1,
	PACKET_FEATURE_STRUCTURE_SUBCOMMAND2,
	};
enum PACKET_FEATURE_STRUCTURE_SM//SelectMemory
	{
	PACKET_FEATURE_STRUCTURE_SM_COMMAND,
	PACKET_FEATURE_STRUCTURE_SM_MEMORY,
	PACKET_FEATURE_STRUCTURE_SM_UNUSED,
	PACKET_FEATURE_STRUCTURE_SM_UNUSED2,
	};
enum PACKET_FEATURE_STRUCTURE_RW//ReadWrite
	{
	PACKET_FEATURE_STRUCTURE_RW_COMMAND,
	PACKET_FEATURE_STRUCTURE_RW_ADDRESS_H,
	PACKET_FEATURE_STRUCTURE_RW_ADDRESS_M,
	PACKET_FEATURE_STRUCTURE_RW_ADDRESS_L,
	};
enum PACKET_RESPOND_GWBS//GET_WRITE_BUFFERS_STATUS
	{
	PACKET_RESPOND_GWBS_TOP,
	PACKET_RESPOND_GWBS_BOTTOM,
	};
enum PACKET_SETBUFFER_STRUCTURE
	{
	PACKET_SETBUFFER_STRUCTURE_COMMAND,
	PACKET_SETBUFFER_STRUCTURE_BUFFERID,
//	PACKET_SETBUFFER_STRUCTURE,
	};
enum PACKET_GENERIC_STRUCTURE//GET_WRITE_BUFFERS_STATUS
	{
	PACKET_GENERIC_STRUCTURE_COMMAND,
	};

/*
enum PACKET_HEAD_STRUCTURE
	{
	PACKET_HEAD_STRUCTURE_SELECTED_MEMORY,
	PACKET_HEAD_STRUCTURE_COMMAND,
	PACKET_HEAD_STRUCTURE_ADDRESS_H,
	PACKET_HEAD_STRUCTURE_ADDRESS_MH,//Middle High
	PACKET_HEAD_STRUCTURE_ADDRESS_ML,
	PACKET_HEAD_STRUCTURE_ADDRESS_L,
	PACKET_HEAD_STRUCTURE_SENDER_DATA,
	PACKET_HEAD_STRUCTURE_RANDOM_ITERATOR,

	PACKET_HEAD_STRUCTURE_CRC		= USB_BUFFER_SIZE-2,
	};
*/
enum COMMANDS
	{
	COMMAND_NONE,
	COMMAND_READ,
	COMMAND_WRITE,
	COMMAND_CHECK,
	COMMAND_SELECT_MEMORY,
	COMMAND_WB_GET_STATUS,
	COMMAND_WB_WRITE,
	COMMAND_WB_RESET_BUFFERS,
	COMMAND_START_APPLICATION,
	};
/*enum COMMANDS
	{
	COMMAND_NONE,
	COMMAND_WRITE_PROGRAM_FLASH,
	COMMAND_READ_PROGRAM_FLASH,
	COMMAND_WRITE_PROGRAM_EEPROM,
	COMMAND_READ_PROGRAM_EEPROM,
	COMMAND_WRITE_MEDIA_FLASH,
	COMMAND_READ_MEDIA_FLASH,
	COMMAND_WRITE_GAME_CONFIG,
	COMMAND_READ_GAME_CONFIG,
	COMMAND_START_APPLICATION,
	COMMAND_CONTINUE_PREVIOUS_OPERATION,
	COMMAND_RETRY_PREVIOUS_OPERATION,
	COMMAND_TRANSMIT_SUCCESS,
	COMMAND_EX0,
	COMMAND_EX1,
	COMMAND_EX2,
	COMMAND_EX3,
	COMMAND_EX4,
	COMMAND_EX5,
	COMMAND_EX6,
	COMMAND_EX7,
	COMMAND_DUMMY	= 255
	};
*/

enum
	{
	USB_BUFFER_START_SECTION_HEAD		= 0,
	USB_BUFFER_START_SECTION_PAYLOAD	= 16,
	};
enum PDA_MEMORIES
	{
	PDAMEMORY_NONE,
	PDAMEMORY_PROGRAM_FLASH,
	PDAMEMORY_TWI_EEPROM,
	PDAMEMORY_MEDIA_FLASH,
	PDAMEMORY_ERROR,
	};
/*enum
	{
	STATE_IDLE,
	STATE_TANSMITTING,
	STATE_BUSY_GENERIC,
	};*/

#define TWI_EEPROM_SIZE_IN_BYTES			32768
#define TWI_EEPROM_SIZE_IN_USB_PAYLOADS		(TWI_EEPROM_SIZE_IN_BYTES/USB_PAYLOAD_SIZE)
#define TWI_EEPROM_TWI_ADDRESS				0b10100000
#define TWI_EEPROM_SPEED_KHZ				400
#define TWI_EEPROM_WRITE_PAGE_SIZE			64
#define TWI_EEPROM_WRITE_DELAY_MS			10//5

//#define MEDIA_FLASH_SIZE_IN_BYTES			32768
#define MEDIA_FLASH_SIZE_IN_BYTES			1048576
#define MEDIA_FLASH_SIZE_IN_USB_PAYLOADS	(MEDIA_FLASH_SIZE_IN_BYTES/USB_PAYLOAD_SIZE)
#define MEDIA_FLASH_WRITE_PAGE_SIZE			USB_PAYLOAD_SIZE //128
//#define MEDIA_FLASH_WRITE_DELAY_MS			5

#endif /* PROTOCOL_H_ */