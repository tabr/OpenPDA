//*****************************************************************************
//
// Author		: Konstantin Chizhov
// Date			: 2010
// All rights reserved.

// Redistribution and use in source and binary forms, with or without modification, 
// are permitted provided that the following conditions are met:
// Redistributions of source code must retain the above copyright notice, 
// this list of conditions and the following disclaimer.

// Redistributions in binary form must reproduce the above copyright notice, 
// this list of conditions and the following disclaimer in the documentation and/or 
// other materials provided with the distribution.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
// IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY 
// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//*****************************************************************************
#ifndef DECLARE_PORT_PINS_HPP_
#define DECLARE_PORT_PINS_HPP_

#ifndef NEIVERIO_HPP_
    #error "Do not include this file directly. Use #include\"neiverio.hpp\" instead!"
#endif

#include "TPin.hpp"

//Selects MCU specific or default pins list depending on IOCONF_MCU_SPECIFIC macro value
#include "IOCONF_Selector.h"

//////Some macro conditional magic because we can't use #ifdef inside DECLARE_PORT_PINS macro defenition
#define DEFINE_PIN_YES( PORT_TYPE_NAME, PIN_NAME_PREFIX, PIN_NUMBER ) \
        typedef Private::TPin<PORT_TYPE_NAME, PIN_NUMBER> PIN_NAME_PREFIX ## PIN_NUMBER;
#define DEFINE_INV_PIN_YES( PORT_TYPE_NAME, PIN_NAME_PREFIX, PIN_NUMBER ) \
        typedef Private::InvertedPin<PORT_TYPE_NAME, PIN_NUMBER> PIN_NAME_PREFIX ## PIN_NUMBER ## Inv;
#define DEFINE_PIN_NO( PORT_TYPE_NAME, PIN_NAME_PREFIX, PIN_NUMBER ) 
#define DEFINE_INV_PIN_NO( PORT_TYPE_NAME, PIN_NAME_PREFIX, PIN_NUMBER ) 

#define DEFINE_PIN_PRESENTS_TESTER_STEP1( PORT_TYPE_NAME, PIN_NAME_PREFIX, PIN_NUMBER, YESNO ) \
        DEFINE_PIN_PRESENTS_TESTER_STEP2( PORT_TYPE_NAME, PIN_NAME_PREFIX, PIN_NUMBER, YESNO )

#define DEFINE_PIN_PRESENTS_TESTER_STEP2( PORT_TYPE_NAME, PIN_NAME_PREFIX, PIN_NUMBER, YESNO ) \
        DEFINE_PIN_ ## YESNO ( PORT_TYPE_NAME, PIN_NAME_PREFIX, PIN_NUMBER )\
        DEFINE_INV_PIN_ ## YESNO ( PORT_TYPE_NAME, PIN_NAME_PREFIX, PIN_NUMBER )\

#define DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, PIN_NUMBER ) \
        DEFINE_PIN_PRESENTS_TESTER_STEP1( PORT_TYPE_NAME, PIN_NAME_PREFIX, PIN_NUMBER, IOCONF_MCU_HAS_ ## PIN_NAME_PREFIX ## PIN_NUMBER )


#define DECLARE_PORT_PINS(PORT_TYPE_NAME, PIN_NAME_PREFIX) \
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 0 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 1 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 2 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 3 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 4 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 5 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 6 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 7 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 8 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 9 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 10 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 11 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 12 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 13 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 14 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 15 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 16 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 17 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 18 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 19 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 20 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 21 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 22 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 23 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 24 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 25 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 26 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 27 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 28 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 29 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 30 )\
    DEFINE_PIN_WITH_PRESENCE_TEST( PORT_TYPE_NAME, PIN_NAME_PREFIX, 31 )

namespace IO
{	
  //Here is something
	#ifdef USE_PORTA
	    DECLARE_PORT_PINS(Porta, Pa)
	#endif

	#ifdef USE_PORTB
        DECLARE_PORT_PINS(Portb, Pb)
	#endif

	#ifdef USE_PORTC
        DECLARE_PORT_PINS(Portc, Pc)
	#endif

	#ifdef USE_PORTD
        DECLARE_PORT_PINS(Portd, Pd)
	#endif

	#ifdef USE_PORTE
        DECLARE_PORT_PINS(Porte, Pe)
	#endif

	#ifdef USE_PORTF
        DECLARE_PORT_PINS(Portf, Pf)
	#endif

	#ifdef USE_PORTG
        DECLARE_PORT_PINS(Portg, Pg)
	#endif

	#ifdef USE_PORTH
        DECLARE_PORT_PINS(Porth, Ph)
	#endif

    #ifdef USE_PORTI
        DECLARE_PORT_PINS(Porti, Pi)
	#endif

	#ifdef USE_PORTJ
        DECLARE_PORT_PINS(Portj, Pj)
	#endif

	#ifdef USE_PORTK
        DECLARE_PORT_PINS(Portk, Pk)
	#endif

	#ifdef USE_PORTQ
        DECLARE_PORT_PINS(Portq, Pq)
	#endif

	#ifdef USE_PORTR
        DECLARE_PORT_PINS(Portr, Pr)
	#endif

	#ifdef USE_PORT0
        DECLARE_PORT_PINS(Port0, P0_)
	#endif

	#ifdef USE_PORT1
        DECLARE_PORT_PINS(Port1, P1_)
	#endif

	#ifdef USE_PORT2
        DECLARE_PORT_PINS(Port2, P2_)
	#endif

	#ifdef USE_PORT3
        DECLARE_PORT_PINS(Port3, P3_)
	#endif

	#ifdef USE_PORT4
        DECLARE_PORT_PINS(Port4, P4_)
	#endif

	#ifdef USE_PORT5
        DECLARE_PORT_PINS(Port5, P5_)
	#endif

	#ifdef USE_PORT6
        DECLARE_PORT_PINS(Port6, P6_)
	#endif

	#ifdef USE_PORT7
        DECLARE_PORT_PINS(Port7, P7_)
	#endif

	#ifdef USE_PORT8
        DECLARE_PORT_PINS(Port8, P8_)
	#endif

	#ifdef USE_PORT9
        DECLARE_PORT_PINS(Port9, P9_)
	#endif

	#ifdef USE_PORT10
        DECLARE_PORT_PINS(Port10, P10_)
	#endif
}
#endif

